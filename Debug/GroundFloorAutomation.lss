
GroundFloorAutomation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000027e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000002f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000324  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000360  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000243  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000017a  00000000  00000000  000005d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000302  00000000  00000000  0000074d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00000a50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000214  00000000  00000000  00000ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002db  00000000  00000000  00000cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00000fa3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_8>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  74:	0c 94 3d 01 	jmp	0x27a	; 0x27a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_8>:
#include <string.h>
//#include "LCDheader(rohsins).h"

volatile uint8_t time = 0;

ISR(TIMER1_OVF_vect) {
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	8f 93       	push	r24
	time++;
  88:	80 91 60 00 	lds	r24, 0x0060
  8c:	8f 5f       	subi	r24, 0xFF	; 255
  8e:	80 93 60 00 	sts	0x0060, r24
	if (time >= 10) {
  92:	80 91 60 00 	lds	r24, 0x0060
  96:	8a 30       	cpi	r24, 0x0A	; 10
  98:	28 f0       	brcs	.+10     	; 0xa4 <__vector_8+0x28>
		time = 0;
  9a:	10 92 60 00 	sts	0x0060, r1
		WDTCR = (1 << WDE);
  9e:	88 e0       	ldi	r24, 0x08	; 8
  a0:	81 bd       	out	0x21, r24	; 33

volatile uint8_t time = 0;

ISR(TIMER1_OVF_vect) {
	time++;
	if (time >= 10) {
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__vector_8+0x26>
		time = 0;
		WDTCR = (1 << WDE);
		while (1);
	}
}
  a4:	8f 91       	pop	r24
  a6:	0f 90       	pop	r0
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	0f 90       	pop	r0
  ac:	1f 90       	pop	r1
  ae:	18 95       	reti

000000b0 <_Z8OpenDoorv>:

void OpenDoor(void) {
	PORTC |= (1 << PD0);
  b0:	a8 9a       	sbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b2:	8f e4       	ldi	r24, 0x4F	; 79
  b4:	93 ec       	ldi	r25, 0xC3	; 195
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <_Z8OpenDoorv+0x6>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <_Z8OpenDoorv+0xc>
  bc:	00 00       	nop
	_delay_ms(200);
	PORTC &= ~(1 << PD0);
  be:	a8 98       	cbi	0x15, 0	; 21
  c0:	08 95       	ret

000000c2 <main>:
}

int main(void)
{
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	e4 97       	sbiw	r28, 0x34	; 52
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	f8 94       	cli
  d0:	de bf       	out	0x3e, r29	; 62
  d2:	0f be       	out	0x3f, r0	; 63
  d4:	cd bf       	out	0x3d, r28	; 61
	//DDRB = 0xFF;
	DDRA = 0x00;
  d6:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	84 bb       	out	0x14, r24	; 20
	//DDRD |= (1 << 5) | (1 << 3) | (1 << 1);
	
	PORTA = 0xFF;
  dc:	8b bb       	out	0x1b, r24	; 27
	PORTC = 0x00;
  de:	15 ba       	out	0x15, r1	; 21
	
	sei();
  e0:	78 94       	sei
	TCCR1B |= (1 << CS12) | (1 << CS10); //prescalar /1024
  e2:	8e b5       	in	r24, 0x2e	; 46
  e4:	85 60       	ori	r24, 0x05	; 5
  e6:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << TOIE1);
  e8:	89 b7       	in	r24, 0x39	; 57
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	89 bf       	out	0x39, r24	; 57
	TCNT1 = 0;
  ee:	1d bc       	out	0x2d, r1	; 45
  f0:	1c bc       	out	0x2c, r1	; 44
	_delay_ms(200);
	PORTC &= ~(1 << PD0);
}

int main(void)
{
  f2:	91 2c       	mov	r9, r1
  f4:	81 2c       	mov	r8, r1
	int data[26];
	uint16_t FacilityCode = 0;
	uint16_t CardNumber = 0;
	while (1) {
		if ((PINA & 0x03) == 0x01) {
			data[i] = 0;
  f6:	ce 01       	movw	r24, r28
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	7c 01       	movw	r14, r24
			i++;
			while ((PINA & 0x03) == 0x01);
		} 
		if ((PINA & 0x03) == 0x02) {
			data[i] = 1;
  fc:	bb 24       	eor	r11, r11
  fe:	b3 94       	inc	r11
 100:	a1 2c       	mov	r10, r1
 102:	08 e1       	ldi	r16, 0x18	; 24
 104:	10 e0       	ldi	r17, 0x00	; 0
 106:	68 94       	set
 108:	cc 24       	eor	r12, r12
 10a:	c3 f8       	bld	r12, 3
 10c:	d1 2c       	mov	r13, r1
				//lcd(0xC0,0);
				//lcd((char *)"CN: ");
				//lcd(CardNumber);
				//lcd((char *)"   ");
			}
			memset(data, 0, sizeof(data));
 10e:	0f 2e       	mov	r0, r31
 110:	f4 e3       	ldi	r31, 0x34	; 52
 112:	7f 2e       	mov	r7, r31
 114:	f0 2d       	mov	r31, r0
	_delay_ms(200);
	PORTC &= ~(1 << PD0);
}

int main(void)
{
 116:	29 2d       	mov	r18, r9
 118:	38 2d       	mov	r19, r8
	int i = 0;
	int data[26];
	uint16_t FacilityCode = 0;
	uint16_t CardNumber = 0;
	while (1) {
		if ((PINA & 0x03) == 0x01) {
 11a:	89 b3       	in	r24, 0x19	; 25
 11c:	83 70       	andi	r24, 0x03	; 3
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	69 f4       	brne	.+26     	; 0x13c <main+0x7a>
			data[i] = 0;
 122:	f9 01       	movw	r30, r18
 124:	ee 0f       	add	r30, r30
 126:	ff 1f       	adc	r31, r31
 128:	ee 0d       	add	r30, r14
 12a:	ff 1d       	adc	r31, r15
 12c:	11 82       	std	Z+1, r1	; 0x01
 12e:	10 82       	st	Z, r1
			i++;
 130:	2f 5f       	subi	r18, 0xFF	; 255
 132:	3f 4f       	sbci	r19, 0xFF	; 255
			while ((PINA & 0x03) == 0x01);
 134:	89 b3       	in	r24, 0x19	; 25
 136:	83 70       	andi	r24, 0x03	; 3
 138:	81 30       	cpi	r24, 0x01	; 1
 13a:	e1 f3       	breq	.-8      	; 0x134 <main+0x72>
		} 
		if ((PINA & 0x03) == 0x02) {
 13c:	89 b3       	in	r24, 0x19	; 25
 13e:	83 70       	andi	r24, 0x03	; 3
 140:	82 30       	cpi	r24, 0x02	; 2
 142:	69 f4       	brne	.+26     	; 0x15e <main+0x9c>
			data[i] = 1;
 144:	f9 01       	movw	r30, r18
 146:	ee 0f       	add	r30, r30
 148:	ff 1f       	adc	r31, r31
 14a:	ee 0d       	add	r30, r14
 14c:	ff 1d       	adc	r31, r15
 14e:	b0 82       	st	Z, r11
 150:	a1 82       	std	Z+1, r10	; 0x01
			i++;
 152:	2f 5f       	subi	r18, 0xFF	; 255
 154:	3f 4f       	sbci	r19, 0xFF	; 255
			while ((PINA & 0x03) == 0x02);
 156:	89 b3       	in	r24, 0x19	; 25
 158:	83 70       	andi	r24, 0x03	; 3
 15a:	82 30       	cpi	r24, 0x02	; 2
 15c:	e1 f3       	breq	.-8      	; 0x156 <main+0x94>
		}
		if (i==26) {
 15e:	2a 31       	cpi	r18, 0x1A	; 26
 160:	31 05       	cpc	r19, r1
 162:	d9 f6       	brne	.-74     	; 0x11a <main+0x58>
 164:	fe 01       	movw	r30, r28
 166:	33 96       	adiw	r30, 0x03	; 3
 168:	8b 2d       	mov	r24, r11
 16a:	9a 2d       	mov	r25, r10
 16c:	69 2d       	mov	r22, r9
 16e:	78 2d       	mov	r23, r8
 170:	a9 2d       	mov	r26, r9
 172:	b8 2d       	mov	r27, r8
			for (int j = 1; j < 25; j++) { 
				if (j < 9) {
 174:	89 30       	cpi	r24, 0x09	; 9
 176:	91 05       	cpc	r25, r1
 178:	6c f4       	brge	.+26     	; 0x194 <main+0xd2>
					FacilityCode |= data[j] << (8-j);
 17a:	20 81       	ld	r18, Z
 17c:	31 81       	ldd	r19, Z+1	; 0x01
 17e:	a6 01       	movw	r20, r12
 180:	48 1b       	sub	r20, r24
 182:	59 0b       	sbc	r21, r25
 184:	02 c0       	rjmp	.+4      	; 0x18a <main+0xc8>
 186:	22 0f       	add	r18, r18
 188:	33 1f       	adc	r19, r19
 18a:	4a 95       	dec	r20
 18c:	e2 f7       	brpl	.-8      	; 0x186 <main+0xc4>
 18e:	a2 2b       	or	r26, r18
 190:	b3 2b       	or	r27, r19
 192:	0c c0       	rjmp	.+24     	; 0x1ac <main+0xea>
				} else {
					CardNumber |= data[j] << (24-j);
 194:	20 81       	ld	r18, Z
 196:	31 81       	ldd	r19, Z+1	; 0x01
 198:	a8 01       	movw	r20, r16
 19a:	48 1b       	sub	r20, r24
 19c:	59 0b       	sbc	r21, r25
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <main+0xe2>
 1a0:	22 0f       	add	r18, r18
 1a2:	33 1f       	adc	r19, r19
 1a4:	4a 95       	dec	r20
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <main+0xde>
 1a8:	62 2b       	or	r22, r18
 1aa:	73 2b       	or	r23, r19
			data[i] = 1;
			i++;
			while ((PINA & 0x03) == 0x02);
		}
		if (i==26) {
			for (int j = 1; j < 25; j++) { 
 1ac:	01 96       	adiw	r24, 0x01	; 1
 1ae:	32 96       	adiw	r30, 0x02	; 2
 1b0:	89 31       	cpi	r24, 0x19	; 25
 1b2:	91 05       	cpc	r25, r1
 1b4:	f9 f6       	brne	.-66     	; 0x174 <main+0xb2>
					FacilityCode |= data[j] << (8-j);
				} else {
					CardNumber |= data[j] << (24-j);
				}
			}
			if (FacilityCode == 188 && CardNumber == 34962) {
 1b6:	ac 3b       	cpi	r26, 0xBC	; 188
 1b8:	b1 05       	cpc	r27, r1
 1ba:	39 f4       	brne	.+14     	; 0x1ca <main+0x108>
 1bc:	62 39       	cpi	r22, 0x92	; 146
 1be:	78 48       	sbci	r23, 0x88	; 136
 1c0:	09 f0       	breq	.+2      	; 0x1c4 <main+0x102>
 1c2:	55 c0       	rjmp	.+170    	; 0x26e <main+0x1ac>
				OpenDoor();
 1c4:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 1c8:	52 c0       	rjmp	.+164    	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 180 && CardNumber == 53992) {
 1ca:	a4 3b       	cpi	r26, 0xB4	; 180
 1cc:	b1 05       	cpc	r27, r1
 1ce:	39 f4       	brne	.+14     	; 0x1de <main+0x11c>
 1d0:	68 3e       	cpi	r22, 0xE8	; 232
 1d2:	72 4d       	sbci	r23, 0xD2	; 210
 1d4:	09 f0       	breq	.+2      	; 0x1d8 <main+0x116>
 1d6:	4b c0       	rjmp	.+150    	; 0x26e <main+0x1ac>
				OpenDoor();
 1d8:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 1dc:	48 c0       	rjmp	.+144    	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 220 && CardNumber == 53992) {
 1de:	ac 3d       	cpi	r26, 0xDC	; 220
 1e0:	b1 05       	cpc	r27, r1
 1e2:	39 f4       	brne	.+14     	; 0x1f2 <main+0x130>
 1e4:	68 3e       	cpi	r22, 0xE8	; 232
 1e6:	72 4d       	sbci	r23, 0xD2	; 210
 1e8:	09 f0       	breq	.+2      	; 0x1ec <main+0x12a>
 1ea:	41 c0       	rjmp	.+130    	; 0x26e <main+0x1ac>
				OpenDoor();
 1ec:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 1f0:	3e c0       	rjmp	.+124    	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 70 && CardNumber == 54248) {
 1f2:	a6 34       	cpi	r26, 0x46	; 70
 1f4:	b1 05       	cpc	r27, r1
 1f6:	31 f4       	brne	.+12     	; 0x204 <main+0x142>
 1f8:	68 3e       	cpi	r22, 0xE8	; 232
 1fa:	73 4d       	sbci	r23, 0xD3	; 211
 1fc:	c1 f5       	brne	.+112    	; 0x26e <main+0x1ac>
				OpenDoor();
 1fe:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 202:	35 c0       	rjmp	.+106    	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 93 && CardNumber == 54248) {
 204:	ad 35       	cpi	r26, 0x5D	; 93
 206:	b1 05       	cpc	r27, r1
 208:	31 f4       	brne	.+12     	; 0x216 <main+0x154>
 20a:	68 3e       	cpi	r22, 0xE8	; 232
 20c:	73 4d       	sbci	r23, 0xD3	; 211
 20e:	79 f5       	brne	.+94     	; 0x26e <main+0x1ac>
				OpenDoor();
 210:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 214:	2c c0       	rjmp	.+88     	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 225 && CardNumber == 53992) {
 216:	a1 3e       	cpi	r26, 0xE1	; 225
 218:	b1 05       	cpc	r27, r1
 21a:	31 f4       	brne	.+12     	; 0x228 <main+0x166>
 21c:	68 3e       	cpi	r22, 0xE8	; 232
 21e:	72 4d       	sbci	r23, 0xD2	; 210
 220:	31 f5       	brne	.+76     	; 0x26e <main+0x1ac>
				OpenDoor();
 222:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 226:	23 c0       	rjmp	.+70     	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 147 && CardNumber == 53992) {
 228:	a3 39       	cpi	r26, 0x93	; 147
 22a:	b1 05       	cpc	r27, r1
 22c:	31 f4       	brne	.+12     	; 0x23a <main+0x178>
 22e:	68 3e       	cpi	r22, 0xE8	; 232
 230:	72 4d       	sbci	r23, 0xD2	; 210
 232:	e9 f4       	brne	.+58     	; 0x26e <main+0x1ac>
				OpenDoor();
 234:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 238:	1a c0       	rjmp	.+52     	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 175 && CardNumber == 53736) {
 23a:	af 3a       	cpi	r26, 0xAF	; 175
 23c:	b1 05       	cpc	r27, r1
 23e:	31 f4       	brne	.+12     	; 0x24c <main+0x18a>
 240:	68 3e       	cpi	r22, 0xE8	; 232
 242:	71 4d       	sbci	r23, 0xD1	; 209
 244:	a1 f4       	brne	.+40     	; 0x26e <main+0x1ac>
				OpenDoor();
 246:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 24a:	11 c0       	rjmp	.+34     	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 54 && CardNumber == 54248) {
 24c:	a6 33       	cpi	r26, 0x36	; 54
 24e:	b1 05       	cpc	r27, r1
 250:	31 f4       	brne	.+12     	; 0x25e <main+0x19c>
 252:	68 3e       	cpi	r22, 0xE8	; 232
 254:	73 4d       	sbci	r23, 0xD3	; 211
 256:	59 f4       	brne	.+22     	; 0x26e <main+0x1ac>
				OpenDoor();
 258:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
 25c:	08 c0       	rjmp	.+16     	; 0x26e <main+0x1ac>
			} else if (FacilityCode == 207 && CardNumber == 53992) {
 25e:	af 3c       	cpi	r26, 0xCF	; 207
 260:	b1 05       	cpc	r27, r1
 262:	29 f4       	brne	.+10     	; 0x26e <main+0x1ac>
 264:	68 3e       	cpi	r22, 0xE8	; 232
 266:	72 4d       	sbci	r23, 0xD2	; 210
 268:	11 f4       	brne	.+4      	; 0x26e <main+0x1ac>
				OpenDoor();
 26a:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd(0xC0,0);
				//lcd((char *)"CN: ");
				//lcd(CardNumber);
				//lcd((char *)"   ");
			}
			memset(data, 0, sizeof(data));
 26e:	f7 01       	movw	r30, r14
 270:	87 2d       	mov	r24, r7
 272:	11 92       	st	Z+, r1
 274:	8a 95       	dec	r24
 276:	e9 f7       	brne	.-6      	; 0x272 <main+0x1b0>
 278:	4e cf       	rjmp	.-356    	; 0x116 <main+0x54>

0000027a <_exit>:
 27a:	f8 94       	cli

0000027c <__stop_program>:
 27c:	ff cf       	rjmp	.-2      	; 0x27c <__stop_program>

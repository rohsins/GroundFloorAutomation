
GroundFloorAutomation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002f8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000036c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  0000036c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000039c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000003d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000247  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000173  00000000  00000000  0000064f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000367  00000000  00000000  000007c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00000b2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000214  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000367  00000000  00000000  00000da4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  0000110b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_8>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  74:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_8>:
//#include <string.h>
//#include "LCDheader(rohsins).h"

volatile uint8_t time = 0;

ISR(TIMER1_OVF_vect) {
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	8f 93       	push	r24
	time++;
  88:	80 91 60 00 	lds	r24, 0x0060
  8c:	8f 5f       	subi	r24, 0xFF	; 255
  8e:	80 93 60 00 	sts	0x0060, r24
	if (time >= 204) {
  92:	80 91 60 00 	lds	r24, 0x0060
  96:	8c 3c       	cpi	r24, 0xCC	; 204
  98:	28 f0       	brcs	.+10     	; 0xa4 <__vector_8+0x28>
		time = 0;
  9a:	10 92 60 00 	sts	0x0060, r1
		WDTCR = (1 << WDE);
  9e:	88 e0       	ldi	r24, 0x08	; 8
  a0:	81 bd       	out	0x21, r24	; 33

volatile uint8_t time = 0;

ISR(TIMER1_OVF_vect) {
	time++;
	if (time >= 204) {
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__vector_8+0x26>
		time = 0;
		WDTCR = (1 << WDE);
		while (1);
	}
}
  a4:	8f 91       	pop	r24
  a6:	0f 90       	pop	r0
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	0f 90       	pop	r0
  ac:	1f 90       	pop	r1
  ae:	18 95       	reti

000000b0 <_Z8OpenDoorv>:

void OpenDoor(void) {
	PORTC |= (1 << PD0);
  b0:	a8 9a       	sbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b2:	87 ea       	ldi	r24, 0xA7	; 167
  b4:	91 e6       	ldi	r25, 0x61	; 97
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <_Z8OpenDoorv+0x6>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <_Z8OpenDoorv+0xc>
  bc:	00 00       	nop
	_delay_ms(100);
	PORTC &= ~(1 << PD0);
  be:	a8 98       	cbi	0x15, 0	; 21
  c0:	08 95       	ret

000000c2 <main>:
}

int main(void)
{
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	e4 97       	sbiw	r28, 0x34	; 52
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	f8 94       	cli
  d0:	de bf       	out	0x3e, r29	; 62
  d2:	0f be       	out	0x3f, r0	; 63
  d4:	cd bf       	out	0x3d, r28	; 61
	//DDRB = 0xFF;
	DDRA = 0x00;
  d6:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	84 bb       	out	0x14, r24	; 20
	//DDRD |= (1 << 5) | (1 << 3) | (1 << 1);
	
	PORTA = 0xFF;
  dc:	8b bb       	out	0x1b, r24	; 27
	PORTC = 0x00;
  de:	15 ba       	out	0x15, r1	; 21
	
	sei();
  e0:	78 94       	sei
	TCCR1B |= (1 << CS12) | (1 << CS10); //prescalar /1024
  e2:	8e b5       	in	r24, 0x2e	; 46
  e4:	85 60       	ori	r24, 0x05	; 5
  e6:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << TOIE1);
  e8:	89 b7       	in	r24, 0x39	; 57
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	89 bf       	out	0x39, r24	; 57
	TCNT1 = 0;
  ee:	1d bc       	out	0x2d, r1	; 45
  f0:	1c bc       	out	0x2c, r1	; 44
	//lcd_initialize();
	//lcd(0x01,0);
	//_delay_ms(10);
	//lcd((char *)"Welcome");
	
	int i = 0;
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
			data[i] = 0;
			i++;
			while ((PINA & 0x03) == 0x01);
		} 
		if ((PINA & 0x03) == 0x02) {
			data[i] = 1;
  f6:	bb 24       	eor	r11, r11
  f8:	b3 94       	inc	r11
  fa:	a1 2c       	mov	r10, r1
			i++;
			while ((PINA & 0x03) == 0x02);
		}
		if (i==26) {
  fc:	c1 2c       	mov	r12, r1
  fe:	d1 2c       	mov	r13, r1
 100:	08 e1       	ldi	r16, 0x18	; 24
 102:	10 e0       	ldi	r17, 0x00	; 0
 104:	68 94       	set
 106:	ee 24       	eor	r14, r14
 108:	e3 f8       	bld	r14, 3
 10a:	f1 2c       	mov	r15, r1
 10c:	20 c0       	rjmp	.+64     	; 0x14e <main+0x8c>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 10e:	2c 2d       	mov	r18, r12
 110:	3d 2d       	mov	r19, r13
 112:	1d c0       	rjmp	.+58     	; 0x14e <main+0x8c>
 114:	2c 2d       	mov	r18, r12
 116:	3d 2d       	mov	r19, r13
 118:	1a c0       	rjmp	.+52     	; 0x14e <main+0x8c>
 11a:	2c 2d       	mov	r18, r12
 11c:	3d 2d       	mov	r19, r13
 11e:	17 c0       	rjmp	.+46     	; 0x14e <main+0x8c>
 120:	2c 2d       	mov	r18, r12
 122:	3d 2d       	mov	r19, r13
 124:	14 c0       	rjmp	.+40     	; 0x14e <main+0x8c>
 126:	2c 2d       	mov	r18, r12
 128:	3d 2d       	mov	r19, r13
 12a:	11 c0       	rjmp	.+34     	; 0x14e <main+0x8c>
 12c:	2c 2d       	mov	r18, r12
 12e:	3d 2d       	mov	r19, r13
 130:	0e c0       	rjmp	.+28     	; 0x14e <main+0x8c>
 132:	2c 2d       	mov	r18, r12
 134:	3d 2d       	mov	r19, r13
 136:	0b c0       	rjmp	.+22     	; 0x14e <main+0x8c>
 138:	2c 2d       	mov	r18, r12
 13a:	3d 2d       	mov	r19, r13
 13c:	08 c0       	rjmp	.+16     	; 0x14e <main+0x8c>
 13e:	2c 2d       	mov	r18, r12
 140:	3d 2d       	mov	r19, r13
 142:	05 c0       	rjmp	.+10     	; 0x14e <main+0x8c>
 144:	2c 2d       	mov	r18, r12
 146:	3d 2d       	mov	r19, r13
 148:	02 c0       	rjmp	.+4      	; 0x14e <main+0x8c>
 14a:	2c 2d       	mov	r18, r12
 14c:	3d 2d       	mov	r19, r13
	int i = 0;
	int data[26];
	uint16_t FacilityCode = 0;
	uint16_t CardNumber = 0;
	while (1) {
		if ((PINA & 0x03) == 0x01) {
 14e:	89 b3       	in	r24, 0x19	; 25
 150:	83 70       	andi	r24, 0x03	; 3
 152:	81 30       	cpi	r24, 0x01	; 1
 154:	89 f4       	brne	.+34     	; 0x178 <main+0xb6>
			data[i] = 0;
 156:	f9 01       	movw	r30, r18
 158:	ee 0f       	add	r30, r30
 15a:	ff 1f       	adc	r31, r31
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	8c 0f       	add	r24, r28
 162:	9d 1f       	adc	r25, r29
 164:	e8 0f       	add	r30, r24
 166:	f9 1f       	adc	r31, r25
 168:	11 82       	std	Z+1, r1	; 0x01
 16a:	10 82       	st	Z, r1
			i++;
 16c:	2f 5f       	subi	r18, 0xFF	; 255
 16e:	3f 4f       	sbci	r19, 0xFF	; 255
			while ((PINA & 0x03) == 0x01);
 170:	89 b3       	in	r24, 0x19	; 25
 172:	83 70       	andi	r24, 0x03	; 3
 174:	81 30       	cpi	r24, 0x01	; 1
 176:	e1 f3       	breq	.-8      	; 0x170 <main+0xae>
		} 
		if ((PINA & 0x03) == 0x02) {
 178:	89 b3       	in	r24, 0x19	; 25
 17a:	83 70       	andi	r24, 0x03	; 3
 17c:	82 30       	cpi	r24, 0x02	; 2
 17e:	09 f0       	breq	.+2      	; 0x182 <main+0xc0>
 180:	ac c0       	rjmp	.+344    	; 0x2da <main+0x218>
			data[i] = 1;
 182:	f9 01       	movw	r30, r18
 184:	ee 0f       	add	r30, r30
 186:	ff 1f       	adc	r31, r31
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	8c 0f       	add	r24, r28
 18e:	9d 1f       	adc	r25, r29
 190:	e8 0f       	add	r30, r24
 192:	f9 1f       	adc	r31, r25
 194:	b0 82       	st	Z, r11
 196:	a1 82       	std	Z+1, r10	; 0x01
			i++;
 198:	2f 5f       	subi	r18, 0xFF	; 255
 19a:	3f 4f       	sbci	r19, 0xFF	; 255
			while ((PINA & 0x03) == 0x02);
 19c:	89 b3       	in	r24, 0x19	; 25
 19e:	83 70       	andi	r24, 0x03	; 3
 1a0:	82 30       	cpi	r24, 0x02	; 2
 1a2:	e1 f3       	breq	.-8      	; 0x19c <main+0xda>
 1a4:	9a c0       	rjmp	.+308    	; 0x2da <main+0x218>
		}
		if (i==26) {
			for (int j = 1; j < 25; j++) { 
				if (j < 9) {
 1a6:	89 30       	cpi	r24, 0x09	; 9
 1a8:	91 05       	cpc	r25, r1
 1aa:	6c f4       	brge	.+26     	; 0x1c6 <main+0x104>
					FacilityCode |= data[j] << (8-j);
 1ac:	20 81       	ld	r18, Z
 1ae:	31 81       	ldd	r19, Z+1	; 0x01
 1b0:	a7 01       	movw	r20, r14
 1b2:	48 1b       	sub	r20, r24
 1b4:	59 0b       	sbc	r21, r25
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <main+0xfa>
 1b8:	22 0f       	add	r18, r18
 1ba:	33 1f       	adc	r19, r19
 1bc:	4a 95       	dec	r20
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <main+0xf6>
 1c0:	a2 2b       	or	r26, r18
 1c2:	b3 2b       	or	r27, r19
 1c4:	0c c0       	rjmp	.+24     	; 0x1de <main+0x11c>
				} else {
					CardNumber |= data[j] << (24-j);
 1c6:	20 81       	ld	r18, Z
 1c8:	31 81       	ldd	r19, Z+1	; 0x01
 1ca:	a8 01       	movw	r20, r16
 1cc:	48 1b       	sub	r20, r24
 1ce:	59 0b       	sbc	r21, r25
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <main+0x114>
 1d2:	22 0f       	add	r18, r18
 1d4:	33 1f       	adc	r19, r19
 1d6:	4a 95       	dec	r20
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <main+0x110>
 1da:	62 2b       	or	r22, r18
 1dc:	73 2b       	or	r23, r19
			data[i] = 1;
			i++;
			while ((PINA & 0x03) == 0x02);
		}
		if (i==26) {
			for (int j = 1; j < 25; j++) { 
 1de:	01 96       	adiw	r24, 0x01	; 1
 1e0:	32 96       	adiw	r30, 0x02	; 2
 1e2:	89 31       	cpi	r24, 0x19	; 25
 1e4:	91 05       	cpc	r25, r1
 1e6:	f9 f6       	brne	.-66     	; 0x1a6 <main+0xe4>
					FacilityCode |= data[j] << (8-j);
				} else {
					CardNumber |= data[j] << (24-j);
				}
			}
			if (FacilityCode == 188 && CardNumber == 34962) {
 1e8:	ac 3b       	cpi	r26, 0xBC	; 188
 1ea:	b1 05       	cpc	r27, r1
 1ec:	49 f4       	brne	.+18     	; 0x200 <main+0x13e>
 1ee:	62 39       	cpi	r22, 0x92	; 146
 1f0:	78 48       	sbci	r23, 0x88	; 136
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <main+0x134>
 1f4:	8c cf       	rjmp	.-232    	; 0x10e <main+0x4c>
				OpenDoor();
 1f6:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 1fa:	2c 2d       	mov	r18, r12
 1fc:	3d 2d       	mov	r19, r13
				} else {
					CardNumber |= data[j] << (24-j);
				}
			}
			if (FacilityCode == 188 && CardNumber == 34962) {
				OpenDoor();
 1fe:	a7 cf       	rjmp	.-178    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 180 && CardNumber == 53992) {
 200:	a4 3b       	cpi	r26, 0xB4	; 180
 202:	b1 05       	cpc	r27, r1
 204:	49 f4       	brne	.+18     	; 0x218 <main+0x156>
 206:	68 3e       	cpi	r22, 0xE8	; 232
 208:	72 4d       	sbci	r23, 0xD2	; 210
 20a:	09 f0       	breq	.+2      	; 0x20e <main+0x14c>
 20c:	83 cf       	rjmp	.-250    	; 0x114 <main+0x52>
				OpenDoor();
 20e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 212:	2c 2d       	mov	r18, r12
 214:	3d 2d       	mov	r19, r13
				}
			}
			if (FacilityCode == 188 && CardNumber == 34962) {
				OpenDoor();
			} else if (FacilityCode == 180 && CardNumber == 53992) {
				OpenDoor();
 216:	9b cf       	rjmp	.-202    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 220 && CardNumber == 53992) {
 218:	ac 3d       	cpi	r26, 0xDC	; 220
 21a:	b1 05       	cpc	r27, r1
 21c:	49 f4       	brne	.+18     	; 0x230 <main+0x16e>
 21e:	68 3e       	cpi	r22, 0xE8	; 232
 220:	72 4d       	sbci	r23, 0xD2	; 210
 222:	09 f0       	breq	.+2      	; 0x226 <main+0x164>
 224:	7a cf       	rjmp	.-268    	; 0x11a <main+0x58>
				OpenDoor();
 226:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 22a:	2c 2d       	mov	r18, r12
 22c:	3d 2d       	mov	r19, r13
			if (FacilityCode == 188 && CardNumber == 34962) {
				OpenDoor();
			} else if (FacilityCode == 180 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 220 && CardNumber == 53992) {
				OpenDoor();
 22e:	8f cf       	rjmp	.-226    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 70 && CardNumber == 54248) {
 230:	a6 34       	cpi	r26, 0x46	; 70
 232:	b1 05       	cpc	r27, r1
 234:	49 f4       	brne	.+18     	; 0x248 <main+0x186>
 236:	68 3e       	cpi	r22, 0xE8	; 232
 238:	73 4d       	sbci	r23, 0xD3	; 211
 23a:	09 f0       	breq	.+2      	; 0x23e <main+0x17c>
 23c:	71 cf       	rjmp	.-286    	; 0x120 <main+0x5e>
				OpenDoor();
 23e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 242:	2c 2d       	mov	r18, r12
 244:	3d 2d       	mov	r19, r13
			} else if (FacilityCode == 180 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 220 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 70 && CardNumber == 54248) {
				OpenDoor();
 246:	83 cf       	rjmp	.-250    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 93 && CardNumber == 54248) {
 248:	ad 35       	cpi	r26, 0x5D	; 93
 24a:	b1 05       	cpc	r27, r1
 24c:	49 f4       	brne	.+18     	; 0x260 <main+0x19e>
 24e:	68 3e       	cpi	r22, 0xE8	; 232
 250:	73 4d       	sbci	r23, 0xD3	; 211
 252:	09 f0       	breq	.+2      	; 0x256 <main+0x194>
 254:	68 cf       	rjmp	.-304    	; 0x126 <main+0x64>
				OpenDoor();
 256:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 25a:	2c 2d       	mov	r18, r12
 25c:	3d 2d       	mov	r19, r13
			} else if (FacilityCode == 220 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 70 && CardNumber == 54248) {
				OpenDoor();
			} else if (FacilityCode == 93 && CardNumber == 54248) {
				OpenDoor();
 25e:	77 cf       	rjmp	.-274    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 225 && CardNumber == 53992) {
 260:	a1 3e       	cpi	r26, 0xE1	; 225
 262:	b1 05       	cpc	r27, r1
 264:	49 f4       	brne	.+18     	; 0x278 <main+0x1b6>
 266:	68 3e       	cpi	r22, 0xE8	; 232
 268:	72 4d       	sbci	r23, 0xD2	; 210
 26a:	09 f0       	breq	.+2      	; 0x26e <main+0x1ac>
 26c:	5f cf       	rjmp	.-322    	; 0x12c <main+0x6a>
				OpenDoor();
 26e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 272:	2c 2d       	mov	r18, r12
 274:	3d 2d       	mov	r19, r13
			} else if (FacilityCode == 70 && CardNumber == 54248) {
				OpenDoor();
			} else if (FacilityCode == 93 && CardNumber == 54248) {
				OpenDoor();
			} else if (FacilityCode == 225 && CardNumber == 53992) {
				OpenDoor();
 276:	6b cf       	rjmp	.-298    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 147 && CardNumber == 53992) {
 278:	a3 39       	cpi	r26, 0x93	; 147
 27a:	b1 05       	cpc	r27, r1
 27c:	49 f4       	brne	.+18     	; 0x290 <main+0x1ce>
 27e:	68 3e       	cpi	r22, 0xE8	; 232
 280:	72 4d       	sbci	r23, 0xD2	; 210
 282:	09 f0       	breq	.+2      	; 0x286 <main+0x1c4>
 284:	56 cf       	rjmp	.-340    	; 0x132 <main+0x70>
				OpenDoor();
 286:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 28a:	2c 2d       	mov	r18, r12
 28c:	3d 2d       	mov	r19, r13
			} else if (FacilityCode == 93 && CardNumber == 54248) {
				OpenDoor();
			} else if (FacilityCode == 225 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 147 && CardNumber == 53992) {
				OpenDoor();
 28e:	5f cf       	rjmp	.-322    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 175 && CardNumber == 53736) {
 290:	af 3a       	cpi	r26, 0xAF	; 175
 292:	b1 05       	cpc	r27, r1
 294:	49 f4       	brne	.+18     	; 0x2a8 <main+0x1e6>
 296:	68 3e       	cpi	r22, 0xE8	; 232
 298:	71 4d       	sbci	r23, 0xD1	; 209
 29a:	09 f0       	breq	.+2      	; 0x29e <main+0x1dc>
 29c:	4d cf       	rjmp	.-358    	; 0x138 <main+0x76>
				OpenDoor();
 29e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 2a2:	2c 2d       	mov	r18, r12
 2a4:	3d 2d       	mov	r19, r13
			} else if (FacilityCode == 225 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 147 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 175 && CardNumber == 53736) {
				OpenDoor();
 2a6:	53 cf       	rjmp	.-346    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 54 && CardNumber == 54248) {
 2a8:	a6 33       	cpi	r26, 0x36	; 54
 2aa:	b1 05       	cpc	r27, r1
 2ac:	49 f4       	brne	.+18     	; 0x2c0 <main+0x1fe>
 2ae:	68 3e       	cpi	r22, 0xE8	; 232
 2b0:	73 4d       	sbci	r23, 0xD3	; 211
 2b2:	09 f0       	breq	.+2      	; 0x2b6 <main+0x1f4>
 2b4:	44 cf       	rjmp	.-376    	; 0x13e <main+0x7c>
				OpenDoor();
 2b6:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 2ba:	2c 2d       	mov	r18, r12
 2bc:	3d 2d       	mov	r19, r13
			} else if (FacilityCode == 147 && CardNumber == 53992) {
				OpenDoor();
			} else if (FacilityCode == 175 && CardNumber == 53736) {
				OpenDoor();
			} else if (FacilityCode == 54 && CardNumber == 54248) {
				OpenDoor();
 2be:	47 cf       	rjmp	.-370    	; 0x14e <main+0x8c>
			} else if (FacilityCode == 207 && CardNumber == 53992) {
 2c0:	af 3c       	cpi	r26, 0xCF	; 207
 2c2:	b1 05       	cpc	r27, r1
 2c4:	09 f0       	breq	.+2      	; 0x2c8 <main+0x206>
 2c6:	3e cf       	rjmp	.-388    	; 0x144 <main+0x82>
 2c8:	68 3e       	cpi	r22, 0xE8	; 232
 2ca:	72 4d       	sbci	r23, 0xD2	; 210
 2cc:	09 f0       	breq	.+2      	; 0x2d0 <main+0x20e>
 2ce:	3d cf       	rjmp	.-390    	; 0x14a <main+0x88>
				OpenDoor();
 2d0:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z8OpenDoorv>
				//lcd((char *)"   ");
			}
			//memset(data, 0, sizeof(data));
			FacilityCode = 0;
			CardNumber = 0;
			i = 0;
 2d4:	2c 2d       	mov	r18, r12
 2d6:	3d 2d       	mov	r19, r13
 2d8:	3a cf       	rjmp	.-396    	; 0x14e <main+0x8c>
		if ((PINA & 0x03) == 0x02) {
			data[i] = 1;
			i++;
			while ((PINA & 0x03) == 0x02);
		}
		if (i==26) {
 2da:	2a 31       	cpi	r18, 0x1A	; 26
 2dc:	31 05       	cpc	r19, r1
 2de:	09 f0       	breq	.+2      	; 0x2e2 <main+0x220>
 2e0:	36 cf       	rjmp	.-404    	; 0x14e <main+0x8c>
 2e2:	fe 01       	movw	r30, r28
 2e4:	33 96       	adiw	r30, 0x03	; 3
 2e6:	8b 2d       	mov	r24, r11
 2e8:	9a 2d       	mov	r25, r10
 2ea:	6c 2d       	mov	r22, r12
 2ec:	7d 2d       	mov	r23, r13
 2ee:	ac 2d       	mov	r26, r12
 2f0:	bd 2d       	mov	r27, r13
 2f2:	59 cf       	rjmp	.-334    	; 0x1a6 <main+0xe4>

000002f4 <_exit>:
 2f4:	f8 94       	cli

000002f6 <__stop_program>:
 2f6:	ff cf       	rjmp	.-2      	; 0x2f6 <__stop_program>
